/* * To change this template, choose Tools | Templates * and open the template in the editor. */package Project;/** * * @author prashant-lappy */import java.awt.*;import java.awt.event.*;import java.awt.Image.*;import javax.swing.*;import java.sql.*;//import java.beans.VetoableChangeListener;//import sun.swing.ImageIconUIResource;public class Main extends JFrame implements ActionListener {    private MDIDesktopPane desktop=new MDIDesktopPane();    private JMenuBar menuBar=new JMenuBar();    //private JToolBar toolbar=new JToolBar();    private JMenu applications=new JMenu("Applications");    private JMenu reports=new JMenu("Reports");            JButton btn_Candidate,btn_Company,btn_Job,btn_Candidate_Report,            btn_Company_Report,btn_Calculator,btn_Notepad,btn_Logout,            btn_CandReportPrev,btn_CompReportPrev,btn_JobReportPrev,btn_Job_Report,            btn_LogReportPrev;    private JScrollPane scrollPane=new JScrollPane();    static Main mainClass;;    static StatusBar statusBar;    static String global_user;    static String user_auth="";    static MenuControl mc;    static MenuProfile mp;    static MenuReport mr;    static ToolBar toolbar;    static Integer global_LogId;    public Main()    {       mc=new MenuControl(desktop);       mp=new MenuProfile(desktop);       mr=new MenuReport(desktop);       setTitle("SIS SMKN 2 Malang");       this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);       scrollPane.getViewport().add(desktop);       getContentPane().setLayout(new BorderLayout());       getContentPane().add(scrollPane,BorderLayout.CENTER);       //Adding the menu       menuBar.add(mc);       menuBar.add(mp);       menuBar.add(mr);       menuBar.add(new MenuApplication());       menuBar.add(new WindowMenu(desktop));       menuBar.add(new MenuHelp(desktop));       setJMenuBar(menuBar);       //add Statusbar       statusBar = new StatusBar();       getContentPane().add(statusBar, BorderLayout.SOUTH);       //add Toolbar       toolbar= new ToolBar();       toolbar.putClientProperty("JToolBar.isRollover", Boolean.TRUE);       getContentPane().add(toolbar,BorderLayout.NORTH);       btn_Candidate= toolbar.btn_Candidate;       btn_Candidate.addActionListener(this);       btn_Company=toolbar.btn_Company;       btn_Company.addActionListener(this);       btn_Job=toolbar.btn_Job;       btn_Job.addActionListener(this);       btn_Candidate_Report= toolbar.btn_Candidate_Report;       btn_Candidate_Report.addActionListener(this);       btn_Company_Report=toolbar.btn_Company_Report;       btn_Company_Report.addActionListener(this);       btn_Job_Report=toolbar.btn_Job_Report;       btn_Job_Report.addActionListener(this);       btn_Calculator= toolbar.btn_Calculator;       btn_Calculator.addActionListener(this);       btn_Notepad=toolbar.btn_Notepad;       btn_Notepad.addActionListener(this);       btn_Logout=toolbar.btn_Logout;       btn_Logout.addActionListener(this);       btn_CandReportPrev=Form_CandidateTbl.btn_CandReportPrev;       btn_CandReportPrev.addActionListener(this);       btn_CompReportPrev=Form_CompanyTbl.btn_CompReportPrev;       btn_CompReportPrev.addActionListener(this);       btn_JobReportPrev=Form_JobTbl.btn_JobReportPrev;       btn_JobReportPrev.addActionListener(this);       btn_LogReportPrev=Form_UserLog.btn_LogReportPrev;       btn_LogReportPrev.addActionListener(this);       addWindowListener(new WindowAdapter() {           @Override           public void windowClosing(WindowEvent e)           {               try {                        int close = JOptionPane.showConfirmDialog(Main.this,"Do you want to exit program?",                                                        "Exit program",JOptionPane.YES_NO_OPTION);                        if(close == JOptionPane.YES_OPTION) {                                logOut();                                System.exit(0);                        }                }                catch(Exception exc) {                        JOptionPane.showMessageDialog(Main.this,exc.getMessage(),"Some Program Error.",                                                        JOptionPane.ERROR_MESSAGE);                }               setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);           }        }       );    }    @Override    public void actionPerformed(ActionEvent evnt)    {        Object source=evnt.getSource();        try {            if(source == btn_Candidate)            {                desktop.add(new Form_Candidate());            }            else if(source==btn_Company)            {                desktop.add(new Form_Company());            }            else if(source==btn_Job)            {                desktop.add(new Form_Jobs());            }            else if(source == btn_Candidate_Report)            {                desktop.add(new Form_CandidateTbl());            }            else if(source == btn_Company_Report)            {                desktop.add(new Form_CompanyTbl());            }            else if(source == btn_Job_Report)            {                //JOptionPane.showMessageDialog(null, "Not Yet Created");                desktop.add(new Form_JobTbl());            }             else if(source==btn_Calculator)            {                try {                    Runtime.getRuntime().exec("C:/WINDOWS/system32/calc.exe");                  } catch (Exception ex) {                    ex.printStackTrace();                  }            }            else if(source==btn_Notepad)            {                try {                    Runtime.getRuntime().exec("C:/WINDOWS/system32/notepad.exe");                  } catch (Exception ex) {                    ex.printStackTrace();                  }            }            else if(source==btn_Logout)            {                mainClass.setVisible(false);                Main.user_auth="";                logOut();                Form_Login frm_Login=new Form_Login();            }            else if(source==btn_CandReportPrev)            {                desktop.add(new Form_CandidateRPT());            }            else if(source==btn_CompReportPrev)            {                desktop.add(new Form_CompanyRPT());            }            else if(source==btn_LogReportPrev)            {                desktop.add(new Form_LogRPT());            }            else if(source==btn_JobReportPrev)            {                desktop.add(new Form_JobRPT());            }         }        catch (Exception e) {            e.printStackTrace();         }    }    static void logOut()    {        try       {           String str="Insert into  tbl_user_logout values(?,?)";           DBConnect.connect();           DBConnect.conn.setAutoCommit(false);           DB_Query.ps = DBConnect.conn.prepareStatement(str);           DB_Query.ps.setInt(1, Main.global_LogId);           DB_Query.ps.setString(2, null);           DB_Query.dclQuery("insert");       }       catch(SQLException e)       {           JOptionPane.showMessageDialog(null, "Error Occured :" + e);       }    }    public static void main(String[] args) {        mainClass=new Main();        //mainClass.setVisible(false);        mainClass.setSize(700, 500);        mainClass.setExtendedState(Frame.MAXIMIZED_BOTH);        mainClass.setVisible(false);                        Form_Login frm_Login=new Form_Login();    }}